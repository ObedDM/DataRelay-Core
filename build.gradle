plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.datarelay'
version = '0.0.1-SNAPSHOT'
description = 'Dataset generator backend engine'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()

    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
        exceptionFormat "full"
        showStandardStreams = true
    }

    // Hard-print any failure stacktrace to the console
    afterTest { desc, result ->
        if (result.resultType.toString() == "FAILURE" && result.exception) {
            println "\n==== FAILURE: ${desc.className}.${desc.name} ===="
            def sw = new StringWriter()
            def pw = new PrintWriter(sw)
            result.exception.printStackTrace(pw)
            pw.flush()
            println sw.toString()
            println "==== END FAILURE ====\n"
        }
    }

    // Optional: extra Spring/Hibernate logs during context boot
    systemProperty "logging.level.org.springframework", "DEBUG"
    systemProperty "logging.level.org.hibernate", "DEBUG"
}
